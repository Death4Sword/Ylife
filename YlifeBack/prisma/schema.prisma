generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  idEvent        Int      @id @default(autoincrement())
  title          String   @db.VarChar(255)
  description    String   @db.VarChar(255)
  dateEvent      DateTime @db.Date
  photo_video    String   @db.VarChar(255)
  lieux          String   @db.VarChar(255)
  nbrParticipant Int
  price          Int
  lienPriceURL   String   @db.VarChar(255)
  compte         Compte  @relation(fields: [idCompte], references: [idCompte], onDelete: NoAction, onUpdate: NoAction, map: "idCompte")
  idCompte       Int
  tag            Tags @relation(fields: [idTag], references: [idTag], onDelete: NoAction, onUpdate: NoAction)
  idTag          Int[]
  participant    ParticipantEvent[]
}

model Compte {
  idCompte      Int           @id @default(autoincrement())
  filiere       String        @db.VarChar(100)
  mail          String        @db.VarChar(255)
  nom           String        @db.VarChar(255)
  prenom        String        @db.VarChar(255)
  typeAsso      String        @db.VarChar(255)
  event         Event[]
  password      Password?
  participant   ParticipantEvent[]
}

model Password {
  idPassword Int    @id @default(autoincrement())
  password   String @db.VarChar(255)
  compte     Compte @relation(fields: [idPassword], references: [idCompte], onDelete: NoAction, onUpdate: NoAction, map: "idCompte")
}

model ParticipantEvent {
  idParticipation Int    @id @default(autoincrement())
  event           Event  @relation(fields: [idEvent], references: [idEvent], onDelete: NoAction, onUpdate: NoAction)
  idEvent         Int
  compte        Compte @relation(fields: [idCompteCreator], references: [idCompte], onDelete: NoAction, onUpdate: NoAction)
  idCompteCreator      Int
}

model Tags {
  idTag Int @id @default(autoincrement())
  nomTag   String @db.VarChar(255)
  event    Event[]
}